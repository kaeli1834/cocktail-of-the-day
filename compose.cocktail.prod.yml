services:
  # Backend API service
  cocktail-api:
    image: ghcr.io/${GITHUB_REPOSITORY}/cocktail-api:latest
    container_name: cocktail-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - cocktail-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend service  
  cocktail-front:
    image: ghcr.io/${GITHUB_REPOSITORY}/cocktail-front:latest
    container_name: cocktail-front
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      cocktail-api:
        condition: service_healthy
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - cocktail-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  cocktail-network:
    driver: bridge
    enable_ipv6: false

# Optional: Add persistent volumes for logs in production
volumes:
  logs:
    driver: local